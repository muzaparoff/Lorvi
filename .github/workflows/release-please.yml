name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  packages: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Install dependencies
        run: npm install -g semantic-release @semantic-release/git @semantic-release/github

      - name: Set initial version if no tags exist
        run: |
          if ! git describe --tags > /dev/null 2>&1; then
            git tag -a v0.1.0 -m "Initial release"
            git push origin v0.1.0
          fi

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

      - name: Get version
        id: get_version
        run: |
          VERSION=$(git describe --tags --abbrev=0 || echo "v0.1.0")
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Build Release
        if: ${{ success() }}
        run: |
          GOOS=darwin GOARCH=amd64 go build -ldflags "-X github.com/muzaparoff/lorvi/cmd.Version=${VERSION}" -o lorvi-darwin-amd64
          GOOS=darwin GOARCH=arm64 go build -ldflags "-X github.com/muzaparoff/lorvi/cmd.Version=${VERSION}" -o lorvi-darwin-arm64
          tar czf lorvi-${VERSION}-darwin-amd64.tar.gz lorvi-darwin-amd64
          tar czf lorvi-${VERSION}-darwin-arm64.tar.gz lorvi-darwin-arm64

      - name: Upload Release Assets
        if: ${{ success() }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          files: |
            lorvi-*-darwin-*.tar.gz
          generate_release_notes: true
